Всем привет, это гайд к занятию 4 по работе с Django.

За всей теорией приглашаю в пересмотр занятия, а здесь кратко скажу, что Django - это фреймворк для создания цельного веб-приложение с Model (бэкендовой частью, которая отвечает за жесткий функционал и связанна с базой данных), Template (фронтэндовой частью, которая диктует страницам веб-приложения, как они должны выглядеть для пользователя) и View (тем, что связывает первые две вещи  и непосредственно взаимодействует с пользователем с помощью запросов пользователя и ответов от приложения).

Фреймворк - это такой шаблон, поверх которого мы можем надстраивать собственные уникальные детали функционала и визуала приложения. На этом занятии практические действия у нас такие:
1. Открыли среду программирования
2. Открыли терминал, в терминале написали pip install django
3. После установки django создали папку под наш проект - запустили django проект. Делается это вот так: пишем в терминале django-admin startproject advertisements14 (вместо advertisements14 можно вписать другое название проекта)
4. Переходим внутрь проекта с помощью cd .\advertisements14\ (в терминале)
5. Пробуем запустить сервер с помощью python manage.py runserver (в терминале) и переходим по предложенной ссылке. Если показывается сайт с приветствием от Django, значит всё окей
6. Попробуем добавить новый функционал нашему проекту. Внутри папки advertisements14 создаём новое приложение с помощью python manage.py startapp app_advertisements14 (назвать приложение можно иначе)
7. Новое приложение - папка, внутри которой можно найти несколько файлов. Перейдем в файл views.py, который отвечает за часть View - взаимодействие пользователя и приложения. В этом файле пропишем следующий код:
from django.shortcuts import render
from django.http import HttpResponse

def index(request):
    return HttpResponse('Успешно!')
Этот код создает функцию index, которая помогает нам отдать пользователю в ответ текст 'Успешно!'
8. В той же папке приложения app_advertisements14 создаем файл urls.py и в нем пишем код:
from django.urls import path
from .views import index

urlpatterns = [
    path('', index)
]
пояснения к этому коду - в файле urls.py
9. Теперь открываем файл urls.py в приложении, которое называется так же, как весь наш проект - в данном случае папку advertisements14. Там уже есть некоторый код, дописываем его, чтобы он выглядел вот так:
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('app_advertisements14.urls')),
]
Мы добавили путь из файла urls.py папки app_advertisements14 к корневому пути - теперь оно будет посылаться как ответ
10. Последний штрих - перейти в файл settings.py и в графе INSTALLED дописать 'app_advertisements14' так, чтобы было:
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_advertisements14',
] 

Занятие окончено, удачи с домашкой)